// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RealTimeData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from RealTimeData.proto</summary>
public static partial class RealTimeDataReflection {

  #region Descriptor
  /// <summary>File descriptor for RealTimeData.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RealTimeDataReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJSZWFsVGltZURhdGEucHJvdG8ikwIKEURvYm90UmVhbFRpbWVEYXRhEg8K",
          "AmlkGAEgASgFSACIAQESNwoJbGl2ZVN0YXRlGAIgASgOMiQuRG9ib3RSZWFs",
          "VGltZURhdGEuRG9ib3RDb25uZWN0U3RhdGUSDAoEcG9zZRgDIAMoAhIXCgph",
          "bGFybVN0YXRlGAQgASgJSAGIAQESHQoVZW5kRWZmZWN0b3JTdWN0aW9uQ3Vw",
          "GAUgAygIEhUKCGRhdGVUaW1lGAYgASgJSAKIAQEiNAoRRG9ib3RDb25uZWN0",
          "U3RhdGUSDQoJQ09OTkVDVEVEEAASEAoMRElTQ09OTkVDVEVEEAFCBQoDX2lk",
          "Qg0KC19hbGFybVN0YXRlQgsKCV9kYXRlVGltZWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::DobotRealTimeData), global::DobotRealTimeData.Parser, new[]{ "Id", "LiveState", "Pose", "AlarmState", "EndEffectorSuctionCup", "DateTime" }, new[]{ "Id", "AlarmState", "DateTime" }, new[]{ typeof(global::DobotRealTimeData.Types.DobotConnectState) }, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class DobotRealTimeData : pb::IMessage<DobotRealTimeData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<DobotRealTimeData> _parser = new pb::MessageParser<DobotRealTimeData>(() => new DobotRealTimeData());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<DobotRealTimeData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RealTimeDataReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DobotRealTimeData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DobotRealTimeData(DobotRealTimeData other) : this() {
    _hasBits0 = other._hasBits0;
    id_ = other.id_;
    liveState_ = other.liveState_;
    pose_ = other.pose_.Clone();
    alarmState_ = other.alarmState_;
    endEffectorSuctionCup_ = other.endEffectorSuctionCup_.Clone();
    dateTime_ = other.dateTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public DobotRealTimeData Clone() {
    return new DobotRealTimeData(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int IdFieldNumber = 1;
  private readonly static int IdDefaultValue = 0;

  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int Id {
    get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
    set {
      _hasBits0 |= 1;
      id_ = value;
    }
  }
  /// <summary>Gets whether the "id" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasId {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "id" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearId() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "liveState" field.</summary>
  public const int LiveStateFieldNumber = 2;
  private global::DobotRealTimeData.Types.DobotConnectState liveState_ = global::DobotRealTimeData.Types.DobotConnectState.Connected;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::DobotRealTimeData.Types.DobotConnectState LiveState {
    get { return liveState_; }
    set {
      liveState_ = value;
    }
  }

  /// <summary>Field number for the "pose" field.</summary>
  public const int PoseFieldNumber = 3;
  private static readonly pb::FieldCodec<float> _repeated_pose_codec
      = pb::FieldCodec.ForFloat(26);
  private readonly pbc::RepeatedField<float> pose_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<float> Pose {
    get { return pose_; }
  }

  /// <summary>Field number for the "alarmState" field.</summary>
  public const int AlarmStateFieldNumber = 4;
  private readonly static string AlarmStateDefaultValue = "";

  private string alarmState_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string AlarmState {
    get { return alarmState_ ?? AlarmStateDefaultValue; }
    set {
      alarmState_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "alarmState" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasAlarmState {
    get { return alarmState_ != null; }
  }
  /// <summary>Clears the value of the "alarmState" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearAlarmState() {
    alarmState_ = null;
  }

  /// <summary>Field number for the "endEffectorSuctionCup" field.</summary>
  public const int EndEffectorSuctionCupFieldNumber = 5;
  private static readonly pb::FieldCodec<bool> _repeated_endEffectorSuctionCup_codec
      = pb::FieldCodec.ForBool(42);
  private readonly pbc::RepeatedField<bool> endEffectorSuctionCup_ = new pbc::RepeatedField<bool>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public pbc::RepeatedField<bool> EndEffectorSuctionCup {
    get { return endEffectorSuctionCup_; }
  }

  /// <summary>Field number for the "dateTime" field.</summary>
  public const int DateTimeFieldNumber = 6;
  private readonly static string DateTimeDefaultValue = "";

  private string dateTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string DateTime {
    get { return dateTime_ ?? DateTimeDefaultValue; }
    set {
      dateTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "dateTime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasDateTime {
    get { return dateTime_ != null; }
  }
  /// <summary>Clears the value of the "dateTime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearDateTime() {
    dateTime_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as DobotRealTimeData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(DobotRealTimeData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Id != other.Id) return false;
    if (LiveState != other.LiveState) return false;
    if(!pose_.Equals(other.pose_)) return false;
    if (AlarmState != other.AlarmState) return false;
    if(!endEffectorSuctionCup_.Equals(other.endEffectorSuctionCup_)) return false;
    if (DateTime != other.DateTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (HasId) hash ^= Id.GetHashCode();
    if (LiveState != global::DobotRealTimeData.Types.DobotConnectState.Connected) hash ^= LiveState.GetHashCode();
    hash ^= pose_.GetHashCode();
    if (HasAlarmState) hash ^= AlarmState.GetHashCode();
    hash ^= endEffectorSuctionCup_.GetHashCode();
    if (HasDateTime) hash ^= DateTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (LiveState != global::DobotRealTimeData.Types.DobotConnectState.Connected) {
      output.WriteRawTag(16);
      output.WriteEnum((int) LiveState);
    }
    pose_.WriteTo(output, _repeated_pose_codec);
    if (HasAlarmState) {
      output.WriteRawTag(34);
      output.WriteString(AlarmState);
    }
    endEffectorSuctionCup_.WriteTo(output, _repeated_endEffectorSuctionCup_codec);
    if (HasDateTime) {
      output.WriteRawTag(50);
      output.WriteString(DateTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (HasId) {
      output.WriteRawTag(8);
      output.WriteInt32(Id);
    }
    if (LiveState != global::DobotRealTimeData.Types.DobotConnectState.Connected) {
      output.WriteRawTag(16);
      output.WriteEnum((int) LiveState);
    }
    pose_.WriteTo(ref output, _repeated_pose_codec);
    if (HasAlarmState) {
      output.WriteRawTag(34);
      output.WriteString(AlarmState);
    }
    endEffectorSuctionCup_.WriteTo(ref output, _repeated_endEffectorSuctionCup_codec);
    if (HasDateTime) {
      output.WriteRawTag(50);
      output.WriteString(DateTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (HasId) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
    }
    if (LiveState != global::DobotRealTimeData.Types.DobotConnectState.Connected) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LiveState);
    }
    size += pose_.CalculateSize(_repeated_pose_codec);
    if (HasAlarmState) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(AlarmState);
    }
    size += endEffectorSuctionCup_.CalculateSize(_repeated_endEffectorSuctionCup_codec);
    if (HasDateTime) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(DateTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(DobotRealTimeData other) {
    if (other == null) {
      return;
    }
    if (other.HasId) {
      Id = other.Id;
    }
    if (other.LiveState != global::DobotRealTimeData.Types.DobotConnectState.Connected) {
      LiveState = other.LiveState;
    }
    pose_.Add(other.pose_);
    if (other.HasAlarmState) {
      AlarmState = other.AlarmState;
    }
    endEffectorSuctionCup_.Add(other.endEffectorSuctionCup_);
    if (other.HasDateTime) {
      DateTime = other.DateTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          LiveState = (global::DobotRealTimeData.Types.DobotConnectState) input.ReadEnum();
          break;
        }
        case 26:
        case 29: {
          pose_.AddEntriesFrom(input, _repeated_pose_codec);
          break;
        }
        case 34: {
          AlarmState = input.ReadString();
          break;
        }
        case 42:
        case 40: {
          endEffectorSuctionCup_.AddEntriesFrom(input, _repeated_endEffectorSuctionCup_codec);
          break;
        }
        case 50: {
          DateTime = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Id = input.ReadInt32();
          break;
        }
        case 16: {
          LiveState = (global::DobotRealTimeData.Types.DobotConnectState) input.ReadEnum();
          break;
        }
        case 26:
        case 29: {
          pose_.AddEntriesFrom(ref input, _repeated_pose_codec);
          break;
        }
        case 34: {
          AlarmState = input.ReadString();
          break;
        }
        case 42:
        case 40: {
          endEffectorSuctionCup_.AddEntriesFrom(ref input, _repeated_endEffectorSuctionCup_codec);
          break;
        }
        case 50: {
          DateTime = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

  #region Nested types
  /// <summary>Container for nested types declared in the DobotRealTimeData message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static partial class Types {
    public enum DobotConnectState {
      [pbr::OriginalName("CONNECTED")] Connected = 0,
      [pbr::OriginalName("DISCONNECTED")] Disconnected = 1,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
